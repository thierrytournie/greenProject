<?php

/**
 * @file
 */


/**
 * Implements hook_form_FORM_ID_alter().
 */
function green_user_form_user_profile_form_alter(&$form, &$form_state) {
  // Merge the main profile form to the user form
  if (($type = profile2_get_types('main')) && $type->userCategory) {
    if (empty($form_state['profiles'])) {
      $profile = profile2_load_by_user($form['#user'], 'main');
      if (empty($profile)) {
        $profile = profile_create(array('type' => 'main', 'uid' => $form['#user']->uid));
      }
      $form_state['profiles'][$profile->type] = $profile;
    }
    profile2_attach_form($form, $form_state);
  }
}

/**
 * Implements hook_menu().
 */
function green_user_menu() {
  $items['users/%/alimentation'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Mon Alimentation',
    'page callback' => 'green_alimentation_page',
    'page arguments' => array('alimentation'),
    'access arguments' => array('create alimentation profile'),
    'file' => 'green_alimentation.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function green_user_menu_alter(&$items) {
  $items['user/%user/edit/main']['access callback'] = FALSE;

}

/**
 * Implements hook_user_view_alter().
 */
function green_user_user_view_alter(&$build) {
  global $user; 

  // Deleting history information
  if (isset($build['summary'])) {
      unset($build['summary']);
  }
  // Get the current url with the alias
  $urlToken = token_replace('[current-page:url]');
  $url = explode('/',$urlToken);
  // Get the username to build the right link
  $userName = $url[5];

   $build['ul1'] = array(
    '#markup' => '<ul><li>'.l(t('Alimentation'),'alimentation/'.$userName).'</li></ul>',
    '#weight' => -10,
  );
   
   $build['profile'] = array(
    '#type' => 'link',
    '#title' => t('Profile'),
    '#href' => 'users/'.$userName,
    '#weight' => -20,
  );
        
   $build['alimentation'] = array(
    '#type' => 'link',
    '#title' => t('Alimentation'),
    '#href' => 'alimentation/'.$userName,
    '#weight' => -20,
  );
   
  $build['travel'] = array(
    '#type' => 'link',
    '#title' => t('Déplacements'),
    '#href' => 'travel/'.$userName,
    '#weight' => -15,
  );
   
  $build['user_picture']['#title'] = t('user picture');
   
  $build['email'] = array(
    '#type' => 'user_profile_item',
    '#title' => t('Email'),
    '#markup' => $user->mail,
    '#weight' => -9,
  );  
}

/**
 * Implémente hook_menu_local_tasks_alter().
 */
function green_user_menu_local_tasks_alter(&$data, $router_item, $root_path) {
      // Get the current url with the alias
  $urlToken = token_replace('[current-page:url]');
  $url = explode('/',$urlToken);
  // Get the username to build the right link
  $userName = $url[5];
 // Ajouter un lien d'action pour 'node/add' sur la page 'admin/content'.
 if ($root_path == 'user/%') {
    $item = menu_get_item('profile/alimentation/'.$userName);
    if ($item['access']) {
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_task',
        '#link' => $item,
      );
    }
  }
}




