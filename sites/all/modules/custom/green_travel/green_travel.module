<?php

/**
 * @file
 */

/**
 * Implements hook_permission().
 */
function green_travel_permission() {
  return array(
    'create travel profile' => array(
      'title' => t('Create travel profile'),
      'description' => t('Allow users to add/modify travel profile.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function green_travel_menu() {
  $items['profile/travel/edit'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Mes Déplacements',
    'page callback' => 'green_travel_page',
    'page arguments' => array('deplacements'),
    'access arguments' => array('create travel profile'),
    'file' => 'green_travel.pages.inc',
  );
  
  $items['travel/%'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Déplacements',
    'page callback' => 'green_travel_page_view',
    'page arguments' => array(1),
    'file' => 'green_travel.pages.inc',
    'access callback' => TRUE,
  );
 
  return $items;
}

function green_travel_green_user_score($user_name){      
  $user = user_load_by_name($user_name); 
  $node_type = 'travel';
  // Search for an existing alimentation for the current user.
  $query = new EntityFieldQuery();
  $results = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', $node_type)
      ->propertyCondition('status', TRUE)
      ->propertyCondition('uid', $user->uid)
      ->execute();

  // If the user has no alimentation node yet
  if (empty($results['node'])) {
     return false;
  }
  
  else {
    // Load the user's alimentation node.
    $node = node_load(reset($results['node'])->nid);
  }
  $score = 0;
    // Vehicule type field
    if(isset($node->field_type_de_vehicule)) {
        switch($node->field_type_de_vehicule['und'][0]['value']) {
            case t('Aucun/Vélo') : 
                $score += 30;
                break;
            case t('Transports en commun') : 
                $score += 10;
                break;
            case t('Scooter') : 
                $score += 5;
                break;
            case t('Moto') : 
                $score += 0;
                break;
            case t('Voiture') : 
                $score += 0;
                break;
        }
    }
    return $score;
  
}

/**
 * Implements hook_user_view_alter().
 */
function green_travel_node_view_alter(&$build) {
  // Testing the node type
  if($build['#bundle'] == 'travel') {
      $path = current_path();
      $path = drupal_get_path_alias($path);
      $arrayPath = explode('/', $path);
      $username=$arrayPath[1];
      
      // We build the menu for the current username
      $link = green_user_link_menu($username);
      
      // Calculate and display the score
      $score = green_travel_green_user_score($username);
      $build['text'] = array(
      '#markup' => '<p class="dashboard-text"> Score : ' . $score . '</p>',
      '#weight' => -10,
      );
      
      $build = array_merge($build,$link);
  }
}